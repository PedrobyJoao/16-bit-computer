// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:

    DMux8Way(in=load, sel=address[11..13], a=loadA, b=loadB, c=loadC,
            d=loadD, e=loadE, f=loadF, g=loadG, h=loadH);

    RAM4K(in=in, load=loadA, address=address[0..11], out=mem0);
    RAM4K(in=in, load=loadB, address=address[0..11], out=mem1);
    RAM4K(in=in, load=loadC, address=address[0..11], out=mem2);
    RAM4K(in=in, load=loadD, address=address[0..11], out=mem3);
    RAM4K(in=in, load=loadE, address=address[0..11], out=mem4);
    RAM4K(in=in, load=loadF, address=address[0..11], out=mem5);
    RAM4K(in=in, load=loadG, address=address[0..11], out=mem6);
    RAM4K(in=in, load=loadH, address=address[0..11], out=mem7);

    Mux8Way16(a=mem0, b=mem1, c=mem2, d=mem3,
            e=mem4, f=mem5, g=mem6, h=mem7, sel=address[11..13], out=out);
}
