// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:

    // the DMux8Way will set load=0 to every non-selected
    // register, and keep 1 (in case load=1) to the selected
    // register
    DMux8Way(in=load, sel[0]=address[0], sel[1]=address[1],
            sel[2]=address[2], a=loadA, b=loadB, c=loadC,
            d=loadD, e=loadE, f=loadF, g=loadG, h=loadH);

    Register(in=in, load=loadA, out=out0);
    Register(in=in, load=loadB, out=out1);
    Register(in=in, load=loadC, out=out2);
    Register(in=in, load=loadD, out=out3);
    Register(in=in, load=loadE, out=out4);
    Register(in=in, load=loadF, out=out5);
    Register(in=in, load=loadG, out=out6);
    Register(in=in, load=loadH, out=out7);

    Mux8Way16(a=out0, b=out1, c=out2, d=out3,
            e=out4, f=out5, g=out6, h=out7, sel[0]=address[0],
            sel[1]=address[1], sel[2]=address[2], out=out);
}
